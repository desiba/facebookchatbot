<!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="utf-8">
    <title></title>
    <style media="screen">

        .background {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.6);
            z-index: 6;
            overflow: auto;
        }

        .noDisplay {
        display: none;
        }

        .modalContainer {
        background: #ffffff;
        border: 1px solid rgba(0, 0, 0, 0.1);
        border-radius: 8px;
        width: 350px;
        position: fixed;
        z-index: 7;
        left: 50%;
        transform: translate(-50%, 0);
        top: 15%;
        overflow: scroll;
        }

        .modalTop {
        background: #fafafa;
        border-radius: 8px 8px 0px 0px;
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 15px 40px;
        border-bottom: 1px solid #ebeff3;
        }

        .modalContentContainer {
            padding: 30px 40px;
            overflow: scroll;
            height: 100%;
        }

        .blueContainer {
            background: #f3f7fa;
            border-radius: 4px;
        }

        .closeBtn {
            background-color: #ebeff3;
            width: 30px;
            height: 30px;
            border-radius: 15px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
        }
        .modalTitle {
            margin-bottom: 0px;
            font-weight: bold;
            font-size: 18px;
        }

        .form-group {
            margin-bottom: 1rem;
            display: flex;
            flex-direction: column;
        }

        label {
            display: inline-block;
            margin-bottom: .5rem;
        }

        .form-control {
            display:block;
            height: calc(1.5em + .75rem + 2px);
            padding: .375rem .75rem;
            font-size: 1rem;
            font-weight: 400;
            line-height: 1.5;
            color: #495057;
            background-color: #fff;
            background-clip: padding-box;
            border: 1px solid #ced4da;
            border-radius: .25rem;
            transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
        }

        button, input {
            overflow: visible;
        }

        .btn-block {
            display: block;
            width: 100%;
        }
        .btn-lg {
            padding: .5rem 1rem;
            font-size: 1.25rem;
            line-height: 1.5;
            border-radius: .3rem;
        }
        .btn-primary {
            color: #fff;
            background-color: #007bff;
            border-color: #007bff;
        }
    </style>
    <script>
/*

  window.fbAsyncInit = function() {
    FB.init({
      appId      : '1032739740412843',
      cookie     : true,
      xfbml      : true,
      version    : 'v5.0'
    });
      
    FB.AppEvents.logPageView();   

    FB.getLoginStatus(function(response) {
        console.log(response);
    });
      
  };
  */

(function(d, s, id){
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) {return;}
    js = d.createElement(s); js.id = id;
    js.src = "https://connect.facebook.net/en_US/messenger.Extensions.js";
    fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'Messenger'));


   window.extAsyncInit = function() {

    MessengerExtensions.getContext(process.env.PAGE_ID, 
        function success(thread_context){
        console.log(thread_context);
        },
        
        function error(err){
            console.log(err);
        }
    );

   
    /*
    MessengerExtensions.getSupportedFeatures(function success(result) {
            let features = result.supported_features;
            if (features.includes("context")) {
                MessengerExtensions.getContext(process.env.PAGE_ID,
                    function success(thread_context) {
                        // success
                        document.getElementById("psid").value = thread_context.psid;
                    },
                    function error(err) {
                        // error
                        console.log(err);
                    }
                );
            }
        }, function error(err) {
            // error retrieving supported features
            console.log(err);
        });
        document.getElementById('submitbutton').addEventListener('click', () => {
            MessengerExtensions.requestCloseBrowser(function success() {
                console.log("Webview closing");
            }, function error(err) {
                console.log(err);
            });
        });

    // the Messenger Extensions JS SDK is done loading 
    alert('window extAsyncInit')  // This alert is coming
    MessengerExtensions.getUserID(function success(uids) {
            var psid = uids.psid;//This is your page scoped sender_id
            alert("Getting PSID") // This alert is NOT COMING
            alert("This is the user's psid " + psid); // Alert NOT COMING
        }, function error(err) {
            alert("Messenger Extension Error: " + err);
        });
    */
};

/*
   window.extAsyncInit = () => {
        // TODO: How to parse env file from here?
        MessengerExtensions.getSupportedFeatures(function success(result) {
            let features = result.supported_features;
            if (features.includes("context")) {
                MessengerExtensions.getContext(process.env.PAGE_ID,
                    function success(thread_context) {
                        // success
                        document.getElementById("psid").value = thread_context.psid;
                    },
                    function error(err) {
                        // error
                        console.log(err);
                    }
                );
            }
        }, function error(err) {
            // error retrieving supported features
            console.log(err);
        });
        document.getElementById('submitbutton').addEventListener('click', () => {
            MessengerExtensions.requestCloseBrowser(function success() {
                console.log("Webview closing");
            }, function error(err) {
                console.log(err);
            });
        });
    };
*/
        

/*
        (function (d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) {
            return;
        }
        js = d.createElement(s);
        js.id = id;
        js.src = "//connect.facebook.com/en_US/messenger.Extensions.js";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'Messenger'));

    window.extAsyncInit = () => {
        // TODO: How to parse env file from here?
        MessengerExtensions.getSupportedFeatures(function success(result) {
            let features = result.supported_features;
            if (features.includes("context")) {
                MessengerExtensions.getContext('1032739740412843',
                    function success(thread_context) {
                        // success
                        document.getElementById("psid").value = thread_context.psid;
                    },
                    function error(err) {
                        // error
                        console.log(err);
                    }
                );
            }
        }, function error(err) {
            // error retrieving supported features
            console.log(err);
        });
        document.getElementById('submitbutton').addEventListener('click', () => {
            MessengerExtensions.requestCloseBrowser(function success() {
                console.log("Webview closing");
            }, function error(err) {
                console.log(err);
            });
        });
    };
*/

    </script>
  </head>
  <body>
      

        <div class="background"></div>
        <div class="modalContainer">
              <div class="modalTop">
                <p class="modalTitle">Login to your Aella Note account</p>
                <div class="closeBtn" id="close">X</div>
              </div>
            <div class="modalContentContainer">
              <div class="form-group">
                    <form method="GET" action="/optionspostback" id="userpassword">
                        <input type="hidden" name="psid" id="psid">
                        <div class="form-group">
                            <label>Email</label>
                            <input type="text" class="form-control" name="email"  placeholder="example@abc.com" autocomplete="username"/>
                        </div>
                        <div class="form-group">
                            <label>Password</label>
                            <input type="password" class="form-control" name="password" autocomplete="current-password"/>
                        </div>
                        <button class="btn btn-primary btn-lg btn-block" type="submit" id="submitbutton">Submit</button>
                    </form>
              </div>
          </div>
        </div>

    
    
    

  </body>
  <script>

    const loginForm = document.getElementById('userpassword');


   


    (function() {

        var overlay = document.getElementById('overlay');
        var dialog = document.getElementById('window');

        document.getElementById('userpassword').onsubmit = function(){
            window.close();
        }

        document.getElementById('close').onclick = function(){
            window.close();
        }

    })();

  </script>
</html>